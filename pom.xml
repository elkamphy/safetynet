<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>safetynet</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>safetynet</name>
	<description>Firestations application management</description>
	  <developers>
	    <developer>
	      <id>elkamphy</id>
	      <name>Noel Kamphoa</name>
	      <email>example@gmail.com</email>
	      <roles>
	        <role>Java Developer</role>
	      </roles>
	      <timezone>+1</timezone>
	    </developer>
	  </developers>	
	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	    <skip.unit.tests>false</skip.unit.tests>
	    <skip.integration.tests>true</skip.integration.tests>
	    <itCoverageAgent></itCoverageAgent>
	    <build-helper-maven-plugin.version>3.1.0</build-helper-maven-plugin.version>
	    <maven-failsafe-plugin.version>2.18.1</maven-failsafe-plugin.version>
	    <jacoco-maven-plugin.version>0.8.3</jacoco-maven-plugin.version>
	    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	    <code.coverage.project.folder>${basedir}/../</code.coverage.project.folder>
	    <code.coverage.overall.data.folder>${basedir}/target/</code.coverage.overall.data.folder>   	
	    <additionalparam>-Xdoclint:none</additionalparam>	
	</properties>
	<dependencies>
		<!-- Web stuff-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Auto generate setters getters and others-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- JSON to Entity conversion-->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		</dependency>	
		<!-- testing -->	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>			
		<!-- Mapping dto to entity and vice versa -->
		<dependency>
		    <groupId>org.modelmapper</groupId>
		    <artifactId>modelmapper</artifactId>
		    <version>2.3.5</version>
		</dependency>	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>	
		<!-- Documentation Open API (Swagger) -->
		<dependency>
		    <groupId>org.springdoc</groupId>
		    <artifactId>springdoc-openapi-ui</artifactId>
		    <version>1.6.4</version>
		</dependency>	
       <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.5</version>
            <type>maven-plugin</type>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.0.0</version>
        </dependency>
		<!-- https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs-maven-plugin -->
		<dependency>
		    <groupId>com.github.spotbugs</groupId>
		    <artifactId>spotbugs-maven-plugin</artifactId>
		    <version>3.1.12.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-failsafe-plugin -->
		<dependency>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-failsafe-plugin</artifactId>
		    <version>3.0.0-M4</version>
		    <scope>test</scope>
		</dependency>        					
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-site-plugin</artifactId>
	            <version>3.7.1</version>
	        </plugin>            
	        <plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-project-info-reports-plugin</artifactId>
			    <version>2.9</version>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>3.1.12.2</version>
				<configuration>
	                <failOnError>false</failOnError>
				</configuration>
			</plugin>     
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-failsafe-plugin</artifactId>
		        <executions>
		          <execution>
		            <id>integration-tests</id>
		            <goals>
		              <goal>integration-test</goal>
		              <goal>verify</goal>
		            </goals>
		            <configuration>
		              <skipTests>${skip.integration.tests}</skipTests>
		              <includes>
		                <include>**/*IntegrationTest.java</include>
		              </includes>
		              <reuseForks>true</reuseForks>
		              <!-- When running as a Maven plugin, the JaCoCo agent configuration is prepared by invoking the prepare-agent
		              or prepare-agent-integration goals, before the actual tests are run. This sets a property named argLine which
		              points to the JaCoCo agent, later passed as a JVM argument to the test runner -->
		              <argLine>${itCoverageAgent}</argLine>
		            </configuration>		            
				  </execution>
		        </executions>
	        </plugin>			       
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.21.0</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>1.2.0</version>
                    </dependency>
                </dependencies>
                <configuration>
                	<skipTests>${skip.unit.tests}</skipTests>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>integration-test</phase>
                        <configuration>
                            <excludes>
                                <exclude>none</exclude>
                            </excludes>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
			            <configuration>
			            	<title>${project.name} : Unit tests</title>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
			                <!-- Sets the output directory for the code coverage report. -->
			                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
			            </configuration>                        
                    </execution>
					<!-- ajout pour integ -->
					<execution>
						<id>jacoco-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report-integration</id>
						<phase>integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
			            <id>pre-integration-test</id>
			            <phase>pre-integration-test</phase>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <destFile>${project.build.directory}/jacoco-it.exec</destFile>
			                <!--
			                    Sets the name of the property containing the settings
			                    for JaCoCo runtime agent.
			                -->
			                <propertyName>failsafeArgLine</propertyName>
			            </configuration>
			        </execution>
			        <!--
			            Ensures that the code coverage report for integration tests after
			            integration tests have been run.
			        -->
			        <execution>
			            <id>post-integration-test</id>
			            <phase>post-integration-test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			            <configuration>
			            	<title>${project.name} : Integration tests</title>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
			                <!-- Sets the output directory for the code coverage report. -->
			                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
			            </configuration>
			        </execution>
			        <!-- Merce UT et IT -->
			        <execution>
					  <id>merge-unit-and-integration</id>
					    <phase>post-integration-test</phase>
					      <goals>
					        <goal>merge</goal>
					      </goals>
					      <configuration>
					      <fileSets>
					        <fileSet>
					          <directory>${project.build.directory}</directory> 
					          <includes>
					            <include>*.exec</include>
					          </includes>
					        </fileSet>
					      </fileSets>
					      <destFile>${project.build.directory}/jacoco-merged.exec</destFile>
					    </configuration>
					  </execution>
					<execution>
					  <id>create-merged-report</id>
					  <phase>post-integration-test</phase>
					  <goals>
					    <goal>report</goal>
					  </goals>
					  <configuration>
					    <title>${project.name} : Merge UT and IT</title>
					    <dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
					    <outputDirectory>${project.reporting.outputDirectory}/jacoco-merged</outputDirectory>
					  </configuration>
					</execution>                    
                </executions>
            </plugin>			
		</plugins>
	</build>
	<reporting>
	    <plugins>
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-project-info-reports-plugin</artifactId>
	        <version>2.6</version>
	        <reportSets>
	          <reportSet>
	            <reports><!-- select reports -->
	              <report>index</report>	              
	              <report>project-team</report> 
	              <report>dependency-info</report>
	              <report>help</report>	  
	            </reports>
	          </reportSet>
	        </reportSets>
	      </plugin>
		 <!-- Soptbugs report-->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
			</plugin>	      
	      <!-- Surefire report -->
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-surefire-report-plugin</artifactId>
	      </plugin>	      
		<!-- JACOCO report -->
           <plugin>
	        <groupId>org.jacoco</groupId>
	        <artifactId>jacoco-maven-plugin</artifactId>
	        <reportSets>
	          <reportSet>
	            <reports>
	              <report>report</report> 
	            </reports>
                <inherited>false</inherited>	            
	          </reportSet>
	        </reportSets>
	      </plugin>	      
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-javadoc-plugin</artifactId>
	        <version>2.9</version>
	        <reportSets>
	          <reportSet><!-- by default, id = "default" -->
	            <reports><!-- select non-aggregate reports -->
	              <report>javadoc</report>
	              <report>test-javadoc</report>            
	            </reports>
	          </reportSet>
	          <reportSet><!-- aggregate reportSet, to define in poms having modules -->
	            <id>aggregate</id>
	            <inherited>false</inherited><!-- don't run aggregate in child modules -->
	            <reports>
	              <report>aggregate</report>
	            </reports>
	          </reportSet>
	        </reportSets>
	      </plugin>
	    </plugins>
	  </reporting>
</project>
